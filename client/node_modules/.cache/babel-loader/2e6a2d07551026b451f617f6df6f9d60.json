{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/playlist-app/client/src/App.js\";\n//This really should be moved into the compnents folder at some point\nimport React from 'react';\nimport { Redirect } from 'react-router-dom'; // import SearchComponent from './components/SearchComponent'\n// import ControlsComponent from './components/ControlsComponent'\n\nimport PlayerComponent from './components/PlayerComponent'; //import LoginComponent from './components/LoginComponent'\n//import axios from 'axios';\n\nimport './App.css';\nimport actions from './redux/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // token: \"\",\n      deviceId: \"\",\n      loggedIn: false,\n      error: \"\" // trackName: \"Track Name\",\n      // artistName: \"Artist Name\",\n      // albumName: \"Album Name\",\n      // playing: false,\n      // position: 0,\n      // duration: 0,\n\n    };\n  }\n\n  componentDidMount() {// const accessToken = this.props.accessToken\n    // this.loadPlayer(accessToken);\n    // spotifyApi.setAccessToken(accessToken);\n  }\n\n  handleLogin() {// if (this.state.token !== \"\") {\n    //  this.setState({ loggedIn: true });\n    //   // check every second for the player.\n    //   // this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\n    // }\n  }\n\n  render() {\n    const token = \"BQDrFxAc5B9_0ULxlCKftPk1r5cYlCPNbqG8kF6_JbYvH8nu9iTUUsGfnolGpiqT6OJdrAOP_0cy6dR7c1wOTNwK_LYZXhw7VjXDA3y2AhyshcBclh3xa9zTUqzI0zbUf9EldsL3MJgDvCzKNotKLKHKP8fXJddBncTceqaJhlI\";\n\n    if (this.props.accessToken) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(PlayerComponent, {\n        accessToken: token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"Access code: \", this.props.accessToken);\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  } // render() {\n  //   const {\n  //     token,\n  //     loggedIn,\n  //     artistName,\n  //     trackName,\n  //     albumName,\n  //     error,\n  //     position,\n  //     duration,\n  //     playing,\n  //   } = this.state;\n  //\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"App-header\">\n  //         <h2>Now Playing</h2>\n  //         <p>A Spotify Web Playback API Demo.</p>\n  //\n  //       {error && <p>Error: {error}</p>}\n  //\n  //       {loggedIn ?\n  //       (<div>\n  //         <SearchComponent/>\n  //         <p>Artist: {artistName}</p>\n  //         <p>Track: {trackName}</p>\n  //         <p>Album: {albumName}</p>\n  //         <ControlsComponent playing={playing} player={this.player}/>\n  //       </div>)\n  //       :\n  //       (<div>\n  //         <p>\n  //           <LoginComponent />\n  //           {token}\n  //         </p>\n  //       </div>)\n  //       }\n  //       <div>Access code: {this.props.accessToken}</div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mike/Projects/playlist-app/client/src/App.js"],"names":["React","Redirect","PlayerComponent","actions","connect","bindActionCreators","SpotifyWebApi","spotifyApi","App","Component","constructor","props","state","deviceId","loggedIn","error","componentDidMount","handleLogin","render","token","accessToken","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AACA,OAAOC,eAAP,MAA4B,8BAA5B,C,CACA;AAEA;;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;AAGA,MAAME,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI,CAKX;AACA;AACA;AACA;AACA;AACA;;AAVW,KAAb;AAYD;;AACDC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG,CACZ;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG,6KAAd;;AACA,QAAI,KAAKR,KAAL,CAAWS,WAAf,EAA2B;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,mBAEO,KAAKR,KAAL,CAAWS,WAFlB,CAAP;AAID,KALD,MAKO;AACL,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAxC+B,CAyChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlFgC;;AAqFlC,SAASC,eAAT,CAAyBT,KAAzB,EAA+B;AAC7B,SAAOA,KAAP;AACD;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLpB,IAAAA,OAAO,EAAEE,kBAAkB,CAACF,OAAD,EAAUoB,QAAV;AADtB,GAAP;AAGD;;AAED,eAAenB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["//This really should be moved into the compnents folder at some point\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// import SearchComponent from './components/SearchComponent'\n// import ControlsComponent from './components/ControlsComponent'\nimport PlayerComponent from './components/PlayerComponent'\n//import LoginComponent from './components/LoginComponent'\n\n//import axios from 'axios';\nimport './App.css';\n\nimport actions from './redux/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // token: \"\",\n      deviceId: \"\",\n      loggedIn: false,\n      error: \"\",\n      // trackName: \"Track Name\",\n      // artistName: \"Artist Name\",\n      // albumName: \"Album Name\",\n      // playing: false,\n      // position: 0,\n      // duration: 0,\n    };\n  }\n  componentDidMount() {\n    // const accessToken = this.props.accessToken\n    // this.loadPlayer(accessToken);\n    // spotifyApi.setAccessToken(accessToken);\n  }\n\n  handleLogin() {\n    // if (this.state.token !== \"\") {\n    //  this.setState({ loggedIn: true });\n    //   // check every second for the player.\n    //   // this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\n    // }\n  }\n\n  render(){\n    const token = \"BQDrFxAc5B9_0ULxlCKftPk1r5cYlCPNbqG8kF6_JbYvH8nu9iTUUsGfnolGpiqT6OJdrAOP_0cy6dR7c1wOTNwK_LYZXhw7VjXDA3y2AhyshcBclh3xa9zTUqzI0zbUf9EldsL3MJgDvCzKNotKLKHKP8fXJddBncTceqaJhlI\"\n    if (this.props.accessToken){\n      return <div>\n      <PlayerComponent accessToken={token}/>\n      Access code: {this.props.accessToken}\n      </div>\n    } else {\n      return <Redirect to=\"/login\" />\n    }\n  }\n  // render() {\n  //   const {\n  //     token,\n  //     loggedIn,\n  //     artistName,\n  //     trackName,\n  //     albumName,\n  //     error,\n  //     position,\n  //     duration,\n  //     playing,\n  //   } = this.state;\n  //\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"App-header\">\n  //         <h2>Now Playing</h2>\n  //         <p>A Spotify Web Playback API Demo.</p>\n  //\n  //       {error && <p>Error: {error}</p>}\n  //\n  //       {loggedIn ?\n  //       (<div>\n  //         <SearchComponent/>\n  //         <p>Artist: {artistName}</p>\n  //         <p>Track: {trackName}</p>\n  //         <p>Album: {albumName}</p>\n  //         <ControlsComponent playing={playing} player={this.player}/>\n  //       </div>)\n  //       :\n  //       (<div>\n  //         <p>\n  //           <LoginComponent />\n  //           {token}\n  //         </p>\n  //       </div>)\n  //       }\n  //       <div>Access code: {this.props.accessToken}</div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\n\nfunction mapStateToProps(state){\n  return state\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}