{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/playlist-app/client/src/components/LoginComponent.js\";\nimport React from 'react';\n\nconst querystring = require('querystring');\n\nclass Login extends React.Component {\n  generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  handleClick() {\n    var stateKey = 'spotify_auth_state';\n    var state = this.generateRandomString(16); //res.cookie(stateKey, state); Need to figure this out later\n    // your application requests authorization\n\n    const appId = '26e6bd236e3c4bb38d86da742958c371';\n    const redirectUri = 'http://localhost:3000/api/spotify/callback/';\n    const scope = 'streaming user-read-private user-read-email user-read-playback-state'; //var scopes = [\"streaming\", \"user-read-email\", \"user-read-private\", \"user-read-playback-state\", \"user-modify-playback-state\", \"user-read-currently-playing\"];\n\n    const url = 'https://accounts.spotify.com/authorize?' + querystring.stringify({\n      response_type: 'code',\n      client_id: appId,\n      scope: scope,\n      redirect_uri: redirectUri,\n      state: state\n    });\n    window.location.href = url;\n    return null;\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"This will be a link to Login if the user isn't signed in\");\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/mike/Projects/playlist-app/client/src/components/LoginComponent.js"],"names":["React","querystring","require","Login","Component","generateRandomString","length","text","possible","i","charAt","Math","floor","random","handleClick","stateKey","state","appId","redirectUri","scope","url","stringify","response_type","client_id","redirect_uri","window","location","href","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAElCC,EAAAA,oBAAoB,CAACC,MAAD,EAAS;AAC3B,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,QAAQ,GAAG,gEAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,MAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AACD,WAAOC,IAAP;AACD;;AAEDO,EAAAA,WAAW,GAAE;AACb,QAAIC,QAAQ,GAAG,oBAAf;AACA,QAAIC,KAAK,GAAG,KAAKX,oBAAL,CAA0B,EAA1B,CAAZ,CAFa,CAGb;AAEA;;AACA,UAAMY,KAAK,GAAG,kCAAd;AACA,UAAMC,WAAW,GAAG,6CAApB;AACA,UAAMC,KAAK,GAAG,sEAAd,CARa,CASb;;AAEA,UAAMC,GAAG,GAAG,4CACVnB,WAAW,CAACoB,SAAZ,CAAsB;AACpBC,MAAAA,aAAa,EAAE,MADK;AAEpBC,MAAAA,SAAS,EAAEN,KAFS;AAGpBE,MAAAA,KAAK,EAAEA,KAHa;AAIpBK,MAAAA,YAAY,EAAEN,WAJM;AAKpBF,MAAAA,KAAK,EAAEA;AALa,KAAtB,CADF;AAQES,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBP,GAAvB;AACA,WAAO,IAAP;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKd,WAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AACD;;AApCiC;;AAsCpC,eAAeX,KAAf","sourcesContent":["import React from 'react'\nconst querystring = require('querystring');\n\nclass Login extends React.Component {\n\n  generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n\n  handleClick(){\n  var stateKey = 'spotify_auth_state';\n  var state = this.generateRandomString(16);\n  //res.cookie(stateKey, state); Need to figure this out later\n\n  // your application requests authorization\n  const appId = '26e6bd236e3c4bb38d86da742958c371';\n  const redirectUri = 'http://localhost:3000/api/spotify/callback/'\n  const scope = 'streaming user-read-private user-read-email user-read-playback-state';\n  //var scopes = [\"streaming\", \"user-read-email\", \"user-read-private\", \"user-read-playback-state\", \"user-modify-playback-state\", \"user-read-currently-playing\"];\n\n  const url = 'https://accounts.spotify.com/authorize?' +\n    querystring.stringify({\n      response_type: 'code',\n      client_id: appId,\n      scope: scope,\n      redirect_uri: redirectUri,\n      state: state\n    });\n    window.location.href = url;\n    return null;\n  }\n  render() {\n    return <button onClick={() => this.handleClick()}>This will be a link to Login if the user isn't signed in</button>\n  }\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}