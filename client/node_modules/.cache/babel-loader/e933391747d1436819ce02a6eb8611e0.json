{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/playlist-app/client/src/components/SearchComponent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst API_KEY = process.env.API_KEY;\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest'; //const API_URL = 'https://api.spotify.com/v1/search?q=tania%20bowra&type=artist'\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getInfo = () => {\n      axios.get(\"\".concat(API_URL, \"?api_key=\").concat(API_KEY, \"&prefix=\").concat(this.state.query, \"&limit=7\")).then(({\n        data\n      }) => {\n        this.setState({\n          results: data.data // MusicGraph returns an object named data,\n          // as does axios. So... data.data\n\n        });\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        }\n      });\n    };\n\n    this.state = {\n      query: '',\n      results: [],\n      albums: [],\n      artists: [],\n      tracks: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const input = this.search.value.replace(/\\s+/g, '%20');\n    const url = \"https://api.spotify.com/v1/search?q=\".concat(input, \"&type=album,track,artist\");\n    axios.get(url, {\n      params: {},\n      headers: {\n        'Authorization': \"Bearer \".concat(this.props.accessToken)\n      }\n    }).then(response => {\n      const albums = response.data.albums;\n      const artists = response.data.artists;\n      const tracks = response.data.tracks;\n      console.log(tracks);\n      this.setState({\n        albums: albums,\n        artists: artists,\n        tracks: tracks\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Search!\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.query, this.props.accessToken), this.props.tracks.map(track => React.createElement(\"div\", {\n      className: \"station\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, track.name)));\n  }\n\n}\n\nexport default SearchComponent;","map":{"version":3,"sources":["/Users/mike/Projects/playlist-app/client/src/components/SearchComponent.js"],"names":["React","Component","axios","API_KEY","process","env","API_URL","SearchComponent","constructor","props","getInfo","get","state","query","then","data","setState","results","handleInputChange","search","value","length","albums","artists","tracks","handleSubmit","bind","event","preventDefault","input","replace","url","params","headers","accessToken","response","console","log","render","map","track","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst { API_KEY } = process.env\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest'\n//const API_URL = 'https://api.spotify.com/v1/search?q=tania%20bowra&type=artist'\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      results: [],\n      albums: [],\n      artists: [],\n      tracks: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n\n  getInfo = () => {\n    axios.get(`${API_URL}?api_key=${API_KEY}&prefix=${this.state.query}&limit=7`)\n      .then(({ data }) => {\n        this.setState({\n          results: data.data // MusicGraph returns an object named data,\n                             // as does axios. So... data.data\n        })\n      })\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      }\n    })\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const input = this.search.value.replace(/\\s+/g, '%20');\n    const url = `https://api.spotify.com/v1/search?q=${input}&type=album,track,artist`;\n    axios.get(url, { params:{}, headers: { 'Authorization': `Bearer ${this.props.accessToken}` }})\n      .then((response) => {\n        const albums = response.data.albums\n        const artists = response.data.artists\n        const tracks = response.data.tracks\n        console.log(tracks)\n        this.setState({\n          albums: albums,\n          artists: artists,\n          tracks: tracks\n        })\n      })\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"Search for...\"\n            ref={input => this.search = input}\n          />\n          <button type=\"submit\">Search!</button>\n        </form>\n        <p>{this.state.query}{this.props.accessToken}</p>\n        {this.props.tracks.map(track => (\n          <div className=\"station\">{track.name}</div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default SearchComponent\n"]},"metadata":{},"sourceType":"module"}