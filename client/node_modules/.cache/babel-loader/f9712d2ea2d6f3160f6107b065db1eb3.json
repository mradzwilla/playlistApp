{"ast":null,"code":"//Remember, reducers are functions that take previous state and return new state as a pure function\n//Do not mutate existing state\nlet authReducer = function (round = 1, action) {\n  switch (action.type) {\n    case 'EXAMPLE':\n      return round + 1;\n\n    default:\n      return round;\n  }\n};\n\nexport default roundReducer;","map":{"version":3,"sources":["/Users/mike/Projects/playlist-app/client/src/redux/reducers/authReducer.js"],"names":["authReducer","round","action","type","roundReducer"],"mappings":"AAAA;AACA;AAEA,IAAIA,WAAW,GAAG,UAASC,KAAK,GAAG,CAAjB,EAAoBC,MAApB,EAA2B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,SAAL;AACC,aAAOF,KAAK,GAAG,CAAf;;AACD;AACC,aAAOA,KAAP;AAJF;AAMA,CAPD;;AASA,eAAeG,YAAf","sourcesContent":["//Remember, reducers are functions that take previous state and return new state as a pure function\n//Do not mutate existing state\n\nlet authReducer = function(round = 1, action){\n\tswitch (action.type){\n\t\tcase 'EXAMPLE':\n\t\t\treturn round + 1\n\t\tdefault:\n\t\t\treturn round;\n\t}\n}\n\nexport default roundReducer;\n"]},"metadata":{},"sourceType":"module"}